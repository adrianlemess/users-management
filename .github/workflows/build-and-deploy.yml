name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "21"

jobs:
  inspections:
    name: Inspections
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        inspection_command:
          [
            "lint:ci",
            "prettier:ci",
            "typecheck",
            "test:coverage",
            "test:e2e:ci",
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          check-latest: true

      - name: Cache dependencies
        id: cache_dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules

          key: ${{ runner.os }}-npm-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: yarn

      - name: Run inspection
        run: yarn ${{ matrix.inspection_command }}

  build:
    name: Build project
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          check-latest: true

      - name: Cache dependencies
        id: cache_dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules

          key: ${{ runner.os }}-npm-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: yarn

      - name: Run build
        run: yarn build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          retention-days: 2

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [inspections, build]

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.AUTH_VERCEL }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}