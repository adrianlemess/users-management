name: Build and Deploy

on:
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "21"

jobs:
  inspections:
    name: Inspections
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        inspection_command: ["lint:ci"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          check-latest: true

      - name: Cache dependencies
        id: cache_dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules

          key: ${{ runner.os }}-npm-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: yarn

      - name: Run inspection
        run: yarn ${{ matrix.inspection_command }}

  build:
    name: Build project
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          check-latest: true

      - name: Cache dependencies
        id: cache_dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            **/node_modules

          key: ${{ runner.os }}-npm-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: yarn

      - name: Run build
        run: yarn build

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          retention-days: 2

  deploy:
    name: Deploy to Preview Vercel
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      DEPLOY_URL: ${{ steps.set_var.outputs.DEPLOY_URL }}
    needs: [inspections, build]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@canary
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel
        run: |
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} >deployment-url.txt 2>error.txt
          code=$?
          if [ $code -eq 0 ]; then
              deploymentUrl=`cat deployment-url.txt`
              echo "DEPLOY_URL=$deploymentUrl" >> $GITHUB_ENV
          else
              errorMessage=`cat error.txt`
              echo "There was an error: $errorMessage"
              exit 1
          fi
      - name: Set Deployment URL
        id: set_var
        run: |
          echo "DEPLOY_URL=${{ env.DEPLOY_URL }}" >> $GITHUB_OUTPUT"
      - name: Comment PR
        run: |
          commitMessage=$(git log --format=%B -n 1 ${{ github.sha }})
          echo "DEPLOY_URL=${{ env.DEPLOY_URL }}" >> $GITHUB_ENV
          | Environment | URL |
          | - | - |
            | ðŸš€ Preview URL | ${{ env.DEPLOY_URL }} |
            | ðŸ”¥ Production URL | ${{ secrets.PRODUCTION_URL }} |
            | ðŸ“Œ Last Commit Deployed | $commitMessage |
          " > comment.txt
          gh pr comment ${{ github.event.pull_request.number }} --body-file comment.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cypress:
    name: Run Cypress Tests
    runs-on: ubuntu-22.04
    needs: deploy
    strategy:
      matrix:
        inspection_command: ["chrome", "firefox"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Run Cypress Tests in ${{ matrix.inspection_command }}
        uses: cypress-io/github-action@v6
        with:
          start: yarn test:e2e:ci:${{ matrix.inspection_command }} --env app_url=${{ env.APP_URL }}
          browser: ${{ matrix.inspection_command }}
        env:
          APP_URL: ${{ needs.deploy.outputs.DEPLOY_URL }}
